// <auto-generated />
using System;
using GrammarWorkbook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrammarWorkbook.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20181224082059_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.Property<Guid>("TopicId");

                    b.Property<bool>("UseOptions");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.ToTable("Exercises");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Exercise");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Sentence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FillTheBlanksExerciseId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("FillTheBlanksExerciseId");

                    b.ToTable("Sentences");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SubTitle");

                    b.Property<string>("Title");

                    b.Property<Guid>("UnitId");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.FillTheBlanksExercise", b =>
                {
                    b.HasBaseType("GrammarWorkbook.Data.Models.Exercise");

                    b.Property<bool>("IsDialog");

                    b.HasDiscriminator().HasValue("fill");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.MatchTheWordsExercise", b =>
                {
                    b.HasBaseType("GrammarWorkbook.Data.Models.Exercise");

                    b.HasDiscriminator().HasValue("match");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Exercise", b =>
                {
                    b.HasOne("GrammarWorkbook.Data.Models.Topic", "Topic")
                        .WithMany("Exercises")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Sentence", b =>
                {
                    b.HasOne("GrammarWorkbook.Data.Models.FillTheBlanksExercise")
                        .WithMany("Sentences")
                        .HasForeignKey("FillTheBlanksExerciseId");
                });

            modelBuilder.Entity("GrammarWorkbook.Data.Models.Topic", b =>
                {
                    b.HasOne("GrammarWorkbook.Data.Models.Unit", "Unit")
                        .WithMany("Topics")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
